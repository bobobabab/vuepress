(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{365:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"项目组织规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目组织规范"}},[t._v("#")]),t._v(" 项目组织规范")]),t._v(" "),a("p",[t._v("如何组织一个前端项目, 例如项目的命名、项目的文件结构、版本号规范等等。")]),t._v(" "),a("h2",{attrs:{id:"通用项目组织规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用项目组织规范"}},[t._v("#")]),t._v(" 通用项目组织规范")]),t._v(" "),a("p",[t._v("基本的项目组织规范如下：")]),t._v(" "),a("ul",[a("li",[t._v("README.md: 项目说明，供关于项目的关键信息或者相关信息的入口. 一般包含下列信息\n"),a("ul",[a("li",[t._v("简要的描述、项目主要特性之类")]),t._v(" "),a("li",[t._v("运行环境/依赖、安装和构建、测试指南")]),t._v(" "),a("li",[t._v("简单代码示例")]),t._v(" "),a("li",[t._v("文档或者入口、其他版本或者相关资源入口")]),t._v(" "),a("li",[t._v("补充信息")]),t._v(" "),a("li",[t._v("相关开发人员")])])]),t._v(" "),a("li",[t._v("CHANGELOG.md: 放置每个版本的变动内容，描述每个版本的内容，一般可以通过配置自动生成")]),t._v(" "),a("li",[t._v("package.json 工程化项目必备，描述可用的命令、包名、依赖、环境约束、项目配置等信息")]),t._v(" "),a("li",[t._v(".gitignore: 忽略不需要的文件，避免提交")]),t._v(" "),a("li",[t._v(".gitattributes: git配置，跨平台差异的行为可能需要配置，比如换行")]),t._v(" "),a("li",[t._v("docs/: 项目细化文档，可选")]),t._v(" "),a("li",[t._v("examples/: 项目示例代码，可选")]),t._v(" "),a("li",[t._v("build/: 项目工具类脚本，非必须")]),t._v(" "),a("li",[t._v("dist/: 项目构建输出目录")]),t._v(" "),a("li",[t._v("src/: 源代码目录")]),t._v(" "),a("li",[t._v("tests/: 单元测试，按照"),a("b",[t._v("Jest")]),t._v("规范，"),a("b",[a("strong",[t._v("tests")])]),t._v("目录通常和被测试的模块在同一个父目录下, 例如:")])]),t._v(" "),a("h2",{attrs:{id:"readme-md案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readme-md案例"}},[t._v("#")]),t._v(" README.md案例")]),t._v(" "),a("div",{staticClass:"language-md extra-class"},[a("pre",{pre:!0,attrs:{class:"language-md"}},[a("code",[a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" 标题（项目名称）")]),t._v("\n\n这里是一个简单的项目描述（组件），包含做了什么，解决了什么问题\n\n"),a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 用法")]),t._v("\n如何安装使用，依赖于什么环境（版本），供一目了然的示例\n\n"),a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 运行测试")]),t._v("\n解释测试测试什么以及为什么\n\n"),a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" API文档")]),t._v("\n提供规范详细的API文档，包括示例或者链接（比如codepen）\n\n"),a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 依赖于")]),t._v("\n依赖于哪些库或者哪些机制\n\n"),a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 补充信息，比如兼容")]),t._v("\n如果是浏览器端组件，补充兼容性，如果是Node端，可以表述Node支持的版本范围\n\n"),a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" ChangeLog(可选)")]),t._v("\n各版本的重要变更以及commit信息\n\n"),a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 作者")]),t._v("\n作者是谁\n")])])]),a("h2",{attrs:{id:"单元测试案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单元测试案例"}},[t._v("#")]),t._v(" 单元测试案例")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/src\n  __tests__/\n    index.js\n    test.js\n  index.js\n  test.js\n")])])]),a("ul",[a("li",[t._v("tests: 全局测试目录，通常应用在继承测试或者e2e测试用例")]),t._v(" "),a("li",[t._v(".env*: 环境变量，可以通过"),a("code",[t._v("doEnv")]),t._v("来读取，一般来说有三个\n"),a("ul",[a("li",[t._v(".env  通用环境变量")]),t._v(" "),a("li",[t._v(".env.development  开发环境")]),t._v(" "),a("li",[t._v(".env.production   生产环境")])])])]),t._v(" "),a("h2",{attrs:{id:"目录结构规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录结构规范"}},[t._v("#")]),t._v(" 目录结构规范")]),t._v(" "),a("p",[t._v("上面有讲到是一个通用的组织规范，理论上项目的组织风格应该保持统一，可以借鉴一下两种模式")]),t._v(" "),a("h3",{attrs:{id:"类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[t._v("#")]),t._v(" 类型")]),t._v(" "),a("p",[t._v("按照文件的类型划分不同的目录，比如 "),a("code",[t._v("components")]),t._v("，"),a("code",[t._v("constants")]),t._v("，"),a("code",[t._v("views")]),t._v("这样，按照MVC架构来划分不同的目录类型，可以使用在中间层上（Node）:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("├──app\n│    ├── models # 模型\n│    ├── views # 视图\n│    ├── controllers # 控制器\n│    ├── helpers # 自定义处理代码（比如错误处理）\n│    └── assets  # 静态资源\n├──config     # 配置\n│    ├── application.js\n│    ├── database.yml\n│    ├── routes.js      # 路由控制\n│    ├── locales        # 国际化配置\n│    └── environments/\n└──  db        # 数据库相关\n")])])]),a("h3",{attrs:{id:"功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能"}},[t._v("#")]),t._v(" 功能")]),t._v(" "),a("p",[t._v("按照一个功能特性或者业务创建单独的目录，通常把相关联的元素定义在一个文件下，比如Vuex的例子:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("├── index.html\n├── main.js\n├── api\n│   └── ... # 抽取出API请求\n├── components\n│   ├── App.vue\n│   └── ...\n└── store\n    ├── index.js          # 我们组装模块并导出 store 的地方\n    ├── actions.js        # 根级别的 action\n    ├── mutations.js      # 根级别的 mutation\n    └── modules\n        ├── cart.js       # 购物车模块\n        └── products.js   # 产品模块\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);